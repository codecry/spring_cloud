server:
  port: 9002
  
spring:
   application:
    name: server-user
   datasource:
     url: jdbc:mysql://localhost/springcloud_mybatis?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
     username: root
     password: 123456
     driver-class-name: com.mysql.cj.jdbc.Driver
     type: com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大  
     initialSize: 5
     minIdle: 5
     maxActive: 20
# 配置获取连接等待超时的时间  
     maxWait: 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  
     timeBetweenEvictionRunsMillis: 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒  
     minEvictableIdleTimeMillis: 300000
# 校验SQL，Oracle配置               validationQuery: SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用  
     validationQuery: SELECT 'x'
     testWhileIdle: true
     testOnBorrow: false
     testOnReturn: false
# 打开PSCache，并且指定每个连接上PSCache的大小  
     poolPreparedStatements: true
     maxPoolPreparedStatementPerConnectionSize: 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙  
     filters: stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录  
     connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据  
     useGlobalDataSourceStat: true
    
logging:
  level:
    com.nico.web.mybatis.mapper: debug
        
eureka:
  client: #客户端注册进eureka服务列表内
    service-url: 
      defaultZone: http://nico.com:8000/eureka/,http://nico25.com:8001/eureka/,http://nico252.com:8002/eureka/

  instance:
    instance-id: server-user-9002   #自定义服务名称信息
    prefer-ip-address: true     #访问路径可以显示IP地址
      
info: 
  app.name: nico-server-user
  company.name: nico.com
  build.artifactId: $project.artifactId$
  build.version: $project.version$
  